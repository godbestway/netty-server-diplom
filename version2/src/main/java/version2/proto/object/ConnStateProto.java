// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: connState.proto
package version2.proto.object;
public final class ConnStateProto {
  private ConnStateProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ConnStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ConnState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 ether_dst = 1;</code>
     * @return A list containing the etherDst.
     */
    java.util.List<java.lang.Integer> getEtherDstList();
    /**
     * <code>repeated uint32 ether_dst = 1;</code>
     * @return The count of etherDst.
     */
    int getEtherDstCount();
    /**
     * <code>repeated uint32 ether_dst = 1;</code>
     * @param index The index of the element to return.
     * @return The etherDst at the given index.
     */
    int getEtherDst(int index);

    /**
     * <code>repeated uint32 ether_src = 2;</code>
     * @return A list containing the etherSrc.
     */
    java.util.List<java.lang.Integer> getEtherSrcList();
    /**
     * <code>repeated uint32 ether_src = 2;</code>
     * @return The count of etherSrc.
     */
    int getEtherSrcCount();
    /**
     * <code>repeated uint32 ether_src = 2;</code>
     * @param index The index of the element to return.
     * @return The etherSrc at the given index.
     */
    int getEtherSrc(int index);

    /**
     * <code>required fixed32 s_ip = 3;</code>
     * @return Whether the sIp field is set.
     */
    boolean hasSIp();
    /**
     * <code>required fixed32 s_ip = 3;</code>
     * @return The sIp.
     */
    int getSIp();

    /**
     * <code>required fixed32 d_ip = 4;</code>
     * @return Whether the dIp field is set.
     */
    boolean hasDIp();
    /**
     * <code>required fixed32 d_ip = 4;</code>
     * @return The dIp.
     */
    int getDIp();

    /**
     * <code>required fixed32 s_port = 5;</code>
     * @return Whether the sPort field is set.
     */
    boolean hasSPort();
    /**
     * <code>required fixed32 s_port = 5;</code>
     * @return The sPort.
     */
    int getSPort();

    /**
     * <code>required fixed32 d_port = 6;</code>
     * @return Whether the dPort field is set.
     */
    boolean hasDPort();
    /**
     * <code>required fixed32 d_port = 6;</code>
     * @return The dPort.
     */
    int getDPort();

    /**
     * <code>optional fixed64 cxid = 7;</code>
     * @return Whether the cxid field is set.
     */
    boolean hasCxid();
    /**
     * <code>optional fixed64 cxid = 7;</code>
     * @return The cxid.
     */
    long getCxid();

    /**
     * <code>optional fixed32 hash = 8;</code>
     * @return Whether the hash field is set.
     */
    boolean hasHash();
    /**
     * <code>optional fixed32 hash = 8;</code>
     * @return The hash.
     */
    int getHash();
  }
  /**
   * Protobuf type {@code ConnState}
   */
  public static final class ConnState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ConnState)
      ConnStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConnState.newBuilder() to construct.
    private ConnState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConnState() {
      etherDst_ = emptyIntList();
      etherSrc_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConnState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConnState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                etherDst_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              etherDst_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                etherDst_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                etherDst_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                etherSrc_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              etherSrc_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                etherSrc_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                etherSrc_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 29: {
              bitField0_ |= 0x00000001;
              sIp_ = input.readFixed32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000002;
              dIp_ = input.readFixed32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000004;
              sPort_ = input.readFixed32();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000008;
              dPort_ = input.readFixed32();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000010;
              cxid_ = input.readFixed64();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000020;
              hash_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          etherDst_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          etherSrc_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ConnStateProto.internal_static_ConnState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ConnStateProto.internal_static_ConnState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ConnStateProto.ConnState.class, ConnStateProto.ConnState.Builder.class);
    }

    private int bitField0_;
    public static final int ETHER_DST_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList etherDst_;
    /**
     * <code>repeated uint32 ether_dst = 1;</code>
     * @return A list containing the etherDst.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getEtherDstList() {
      return etherDst_;
    }
    /**
     * <code>repeated uint32 ether_dst = 1;</code>
     * @return The count of etherDst.
     */
    public int getEtherDstCount() {
      return etherDst_.size();
    }
    /**
     * <code>repeated uint32 ether_dst = 1;</code>
     * @param index The index of the element to return.
     * @return The etherDst at the given index.
     */
    public int getEtherDst(int index) {
      return etherDst_.getInt(index);
    }

    public static final int ETHER_SRC_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList etherSrc_;
    /**
     * <code>repeated uint32 ether_src = 2;</code>
     * @return A list containing the etherSrc.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getEtherSrcList() {
      return etherSrc_;
    }
    /**
     * <code>repeated uint32 ether_src = 2;</code>
     * @return The count of etherSrc.
     */
    public int getEtherSrcCount() {
      return etherSrc_.size();
    }
    /**
     * <code>repeated uint32 ether_src = 2;</code>
     * @param index The index of the element to return.
     * @return The etherSrc at the given index.
     */
    public int getEtherSrc(int index) {
      return etherSrc_.getInt(index);
    }

    public static final int S_IP_FIELD_NUMBER = 3;
    private int sIp_;
    /**
     * <code>required fixed32 s_ip = 3;</code>
     * @return Whether the sIp field is set.
     */
    @java.lang.Override
    public boolean hasSIp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required fixed32 s_ip = 3;</code>
     * @return The sIp.
     */
    @java.lang.Override
    public int getSIp() {
      return sIp_;
    }

    public static final int D_IP_FIELD_NUMBER = 4;
    private int dIp_;
    /**
     * <code>required fixed32 d_ip = 4;</code>
     * @return Whether the dIp field is set.
     */
    @java.lang.Override
    public boolean hasDIp() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required fixed32 d_ip = 4;</code>
     * @return The dIp.
     */
    @java.lang.Override
    public int getDIp() {
      return dIp_;
    }

    public static final int S_PORT_FIELD_NUMBER = 5;
    private int sPort_;
    /**
     * <code>required fixed32 s_port = 5;</code>
     * @return Whether the sPort field is set.
     */
    @java.lang.Override
    public boolean hasSPort() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required fixed32 s_port = 5;</code>
     * @return The sPort.
     */
    @java.lang.Override
    public int getSPort() {
      return sPort_;
    }

    public static final int D_PORT_FIELD_NUMBER = 6;
    private int dPort_;
    /**
     * <code>required fixed32 d_port = 6;</code>
     * @return Whether the dPort field is set.
     */
    @java.lang.Override
    public boolean hasDPort() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required fixed32 d_port = 6;</code>
     * @return The dPort.
     */
    @java.lang.Override
    public int getDPort() {
      return dPort_;
    }

    public static final int CXID_FIELD_NUMBER = 7;
    private long cxid_;
    /**
     * <code>optional fixed64 cxid = 7;</code>
     * @return Whether the cxid field is set.
     */
    @java.lang.Override
    public boolean hasCxid() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional fixed64 cxid = 7;</code>
     * @return The cxid.
     */
    @java.lang.Override
    public long getCxid() {
      return cxid_;
    }

    public static final int HASH_FIELD_NUMBER = 8;
    private int hash_;
    /**
     * <code>optional fixed32 hash = 8;</code>
     * @return Whether the hash field is set.
     */
    @java.lang.Override
    public boolean hasHash() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional fixed32 hash = 8;</code>
     * @return The hash.
     */
    @java.lang.Override
    public int getHash() {
      return hash_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < etherDst_.size(); i++) {
        output.writeUInt32(1, etherDst_.getInt(i));
      }
      for (int i = 0; i < etherSrc_.size(); i++) {
        output.writeUInt32(2, etherSrc_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed32(3, sIp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed32(4, dIp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFixed32(5, sPort_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFixed32(6, dPort_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFixed64(7, cxid_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFixed32(8, hash_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < etherDst_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(etherDst_.getInt(i));
        }
        size += dataSize;
        size += 1 * getEtherDstList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < etherSrc_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(etherSrc_.getInt(i));
        }
        size += dataSize;
        size += 1 * getEtherSrcList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, sIp_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, dIp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, sPort_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, dPort_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(7, cxid_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(8, hash_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ConnStateProto.ConnState)) {
        return super.equals(obj);
      }
      ConnStateProto.ConnState other = (ConnStateProto.ConnState) obj;

      if (!getEtherDstList()
          .equals(other.getEtherDstList())) return false;
      if (!getEtherSrcList()
          .equals(other.getEtherSrcList())) return false;
      if (hasSIp() != other.hasSIp()) return false;
      if (hasSIp()) {
        if (getSIp()
            != other.getSIp()) return false;
      }
      if (hasDIp() != other.hasDIp()) return false;
      if (hasDIp()) {
        if (getDIp()
            != other.getDIp()) return false;
      }
      if (hasSPort() != other.hasSPort()) return false;
      if (hasSPort()) {
        if (getSPort()
            != other.getSPort()) return false;
      }
      if (hasDPort() != other.hasDPort()) return false;
      if (hasDPort()) {
        if (getDPort()
            != other.getDPort()) return false;
      }
      if (hasCxid() != other.hasCxid()) return false;
      if (hasCxid()) {
        if (getCxid()
            != other.getCxid()) return false;
      }
      if (hasHash() != other.hasHash()) return false;
      if (hasHash()) {
        if (getHash()
            != other.getHash()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEtherDstCount() > 0) {
        hash = (37 * hash) + ETHER_DST_FIELD_NUMBER;
        hash = (53 * hash) + getEtherDstList().hashCode();
      }
      if (getEtherSrcCount() > 0) {
        hash = (37 * hash) + ETHER_SRC_FIELD_NUMBER;
        hash = (53 * hash) + getEtherSrcList().hashCode();
      }
      if (hasSIp()) {
        hash = (37 * hash) + S_IP_FIELD_NUMBER;
        hash = (53 * hash) + getSIp();
      }
      if (hasDIp()) {
        hash = (37 * hash) + D_IP_FIELD_NUMBER;
        hash = (53 * hash) + getDIp();
      }
      if (hasSPort()) {
        hash = (37 * hash) + S_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getSPort();
      }
      if (hasDPort()) {
        hash = (37 * hash) + D_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getDPort();
      }
      if (hasCxid()) {
        hash = (37 * hash) + CXID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCxid());
      }
      if (hasHash()) {
        hash = (37 * hash) + HASH_FIELD_NUMBER;
        hash = (53 * hash) + getHash();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ConnStateProto.ConnState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ConnStateProto.ConnState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ConnStateProto.ConnState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ConnStateProto.ConnState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ConnStateProto.ConnState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ConnStateProto.ConnState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ConnStateProto.ConnState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ConnStateProto.ConnState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ConnStateProto.ConnState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ConnStateProto.ConnState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ConnStateProto.ConnState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ConnStateProto.ConnState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ConnStateProto.ConnState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ConnState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ConnState)
        ConnStateProto.ConnStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ConnStateProto.internal_static_ConnState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ConnStateProto.internal_static_ConnState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ConnStateProto.ConnState.class, ConnStateProto.ConnState.Builder.class);
      }

      // Construct using ConnStateProto.ConnState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        etherDst_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        etherSrc_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        sIp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        dIp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        sPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        dPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        cxid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        hash_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ConnStateProto.internal_static_ConnState_descriptor;
      }

      @java.lang.Override
      public ConnStateProto.ConnState getDefaultInstanceForType() {
        return ConnStateProto.ConnState.getDefaultInstance();
      }

      @java.lang.Override
      public ConnStateProto.ConnState build() {
        ConnStateProto.ConnState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ConnStateProto.ConnState buildPartial() {
        ConnStateProto.ConnState result = new ConnStateProto.ConnState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          etherDst_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.etherDst_ = etherDst_;
        if (((bitField0_ & 0x00000002) != 0)) {
          etherSrc_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.etherSrc_ = etherSrc_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sIp_ = sIp_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.dIp_ = dIp_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.sPort_ = sPort_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.dPort_ = dPort_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.cxid_ = cxid_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.hash_ = hash_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ConnStateProto.ConnState) {
          return mergeFrom((ConnStateProto.ConnState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ConnStateProto.ConnState other) {
        if (other == ConnStateProto.ConnState.getDefaultInstance()) return this;
        if (!other.etherDst_.isEmpty()) {
          if (etherDst_.isEmpty()) {
            etherDst_ = other.etherDst_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEtherDstIsMutable();
            etherDst_.addAll(other.etherDst_);
          }
          onChanged();
        }
        if (!other.etherSrc_.isEmpty()) {
          if (etherSrc_.isEmpty()) {
            etherSrc_ = other.etherSrc_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEtherSrcIsMutable();
            etherSrc_.addAll(other.etherSrc_);
          }
          onChanged();
        }
        if (other.hasSIp()) {
          setSIp(other.getSIp());
        }
        if (other.hasDIp()) {
          setDIp(other.getDIp());
        }
        if (other.hasSPort()) {
          setSPort(other.getSPort());
        }
        if (other.hasDPort()) {
          setDPort(other.getDPort());
        }
        if (other.hasCxid()) {
          setCxid(other.getCxid());
        }
        if (other.hasHash()) {
          setHash(other.getHash());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasSIp()) {
          return false;
        }
        if (!hasDIp()) {
          return false;
        }
        if (!hasSPort()) {
          return false;
        }
        if (!hasDPort()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ConnStateProto.ConnState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ConnStateProto.ConnState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList etherDst_ = emptyIntList();
      private void ensureEtherDstIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          etherDst_ = mutableCopy(etherDst_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 ether_dst = 1;</code>
       * @return A list containing the etherDst.
       */
      public java.util.List<java.lang.Integer>
          getEtherDstList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(etherDst_) : etherDst_;
      }
      /**
       * <code>repeated uint32 ether_dst = 1;</code>
       * @return The count of etherDst.
       */
      public int getEtherDstCount() {
        return etherDst_.size();
      }
      /**
       * <code>repeated uint32 ether_dst = 1;</code>
       * @param index The index of the element to return.
       * @return The etherDst at the given index.
       */
      public int getEtherDst(int index) {
        return etherDst_.getInt(index);
      }
      /**
       * <code>repeated uint32 ether_dst = 1;</code>
       * @param index The index to set the value at.
       * @param value The etherDst to set.
       * @return This builder for chaining.
       */
      public Builder setEtherDst(
          int index, int value) {
        ensureEtherDstIsMutable();
        etherDst_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ether_dst = 1;</code>
       * @param value The etherDst to add.
       * @return This builder for chaining.
       */
      public Builder addEtherDst(int value) {
        ensureEtherDstIsMutable();
        etherDst_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ether_dst = 1;</code>
       * @param values The etherDst to add.
       * @return This builder for chaining.
       */
      public Builder addAllEtherDst(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEtherDstIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, etherDst_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ether_dst = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEtherDst() {
        etherDst_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList etherSrc_ = emptyIntList();
      private void ensureEtherSrcIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          etherSrc_ = mutableCopy(etherSrc_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 ether_src = 2;</code>
       * @return A list containing the etherSrc.
       */
      public java.util.List<java.lang.Integer>
          getEtherSrcList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(etherSrc_) : etherSrc_;
      }
      /**
       * <code>repeated uint32 ether_src = 2;</code>
       * @return The count of etherSrc.
       */
      public int getEtherSrcCount() {
        return etherSrc_.size();
      }
      /**
       * <code>repeated uint32 ether_src = 2;</code>
       * @param index The index of the element to return.
       * @return The etherSrc at the given index.
       */
      public int getEtherSrc(int index) {
        return etherSrc_.getInt(index);
      }
      /**
       * <code>repeated uint32 ether_src = 2;</code>
       * @param index The index to set the value at.
       * @param value The etherSrc to set.
       * @return This builder for chaining.
       */
      public Builder setEtherSrc(
          int index, int value) {
        ensureEtherSrcIsMutable();
        etherSrc_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ether_src = 2;</code>
       * @param value The etherSrc to add.
       * @return This builder for chaining.
       */
      public Builder addEtherSrc(int value) {
        ensureEtherSrcIsMutable();
        etherSrc_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ether_src = 2;</code>
       * @param values The etherSrc to add.
       * @return This builder for chaining.
       */
      public Builder addAllEtherSrc(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEtherSrcIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, etherSrc_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ether_src = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEtherSrc() {
        etherSrc_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int sIp_ ;
      /**
       * <code>required fixed32 s_ip = 3;</code>
       * @return Whether the sIp field is set.
       */
      @java.lang.Override
      public boolean hasSIp() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required fixed32 s_ip = 3;</code>
       * @return The sIp.
       */
      @java.lang.Override
      public int getSIp() {
        return sIp_;
      }
      /**
       * <code>required fixed32 s_ip = 3;</code>
       * @param value The sIp to set.
       * @return This builder for chaining.
       */
      public Builder setSIp(int value) {
        bitField0_ |= 0x00000004;
        sIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 s_ip = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sIp_ = 0;
        onChanged();
        return this;
      }

      private int dIp_ ;
      /**
       * <code>required fixed32 d_ip = 4;</code>
       * @return Whether the dIp field is set.
       */
      @java.lang.Override
      public boolean hasDIp() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required fixed32 d_ip = 4;</code>
       * @return The dIp.
       */
      @java.lang.Override
      public int getDIp() {
        return dIp_;
      }
      /**
       * <code>required fixed32 d_ip = 4;</code>
       * @param value The dIp to set.
       * @return This builder for chaining.
       */
      public Builder setDIp(int value) {
        bitField0_ |= 0x00000008;
        dIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 d_ip = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dIp_ = 0;
        onChanged();
        return this;
      }

      private int sPort_ ;
      /**
       * <code>required fixed32 s_port = 5;</code>
       * @return Whether the sPort field is set.
       */
      @java.lang.Override
      public boolean hasSPort() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>required fixed32 s_port = 5;</code>
       * @return The sPort.
       */
      @java.lang.Override
      public int getSPort() {
        return sPort_;
      }
      /**
       * <code>required fixed32 s_port = 5;</code>
       * @param value The sPort to set.
       * @return This builder for chaining.
       */
      public Builder setSPort(int value) {
        bitField0_ |= 0x00000010;
        sPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 s_port = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSPort() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sPort_ = 0;
        onChanged();
        return this;
      }

      private int dPort_ ;
      /**
       * <code>required fixed32 d_port = 6;</code>
       * @return Whether the dPort field is set.
       */
      @java.lang.Override
      public boolean hasDPort() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>required fixed32 d_port = 6;</code>
       * @return The dPort.
       */
      @java.lang.Override
      public int getDPort() {
        return dPort_;
      }
      /**
       * <code>required fixed32 d_port = 6;</code>
       * @param value The dPort to set.
       * @return This builder for chaining.
       */
      public Builder setDPort(int value) {
        bitField0_ |= 0x00000020;
        dPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 d_port = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dPort_ = 0;
        onChanged();
        return this;
      }

      private long cxid_ ;
      /**
       * <code>optional fixed64 cxid = 7;</code>
       * @return Whether the cxid field is set.
       */
      @java.lang.Override
      public boolean hasCxid() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional fixed64 cxid = 7;</code>
       * @return The cxid.
       */
      @java.lang.Override
      public long getCxid() {
        return cxid_;
      }
      /**
       * <code>optional fixed64 cxid = 7;</code>
       * @param value The cxid to set.
       * @return This builder for chaining.
       */
      public Builder setCxid(long value) {
        bitField0_ |= 0x00000040;
        cxid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 cxid = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCxid() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cxid_ = 0L;
        onChanged();
        return this;
      }

      private int hash_ ;
      /**
       * <code>optional fixed32 hash = 8;</code>
       * @return Whether the hash field is set.
       */
      @java.lang.Override
      public boolean hasHash() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional fixed32 hash = 8;</code>
       * @return The hash.
       */
      @java.lang.Override
      public int getHash() {
        return hash_;
      }
      /**
       * <code>optional fixed32 hash = 8;</code>
       * @param value The hash to set.
       * @return This builder for chaining.
       */
      public Builder setHash(int value) {
        bitField0_ |= 0x00000080;
        hash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 hash = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearHash() {
        bitField0_ = (bitField0_ & ~0x00000080);
        hash_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ConnState)
    }

    // @@protoc_insertion_point(class_scope:ConnState)
    private static final ConnStateProto.ConnState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ConnStateProto.ConnState();
    }

    public static ConnStateProto.ConnState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ConnState>
        PARSER = new com.google.protobuf.AbstractParser<ConnState>() {
      @java.lang.Override
      public ConnState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConnState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConnState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConnState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ConnStateProto.ConnState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ConnState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ConnState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017connState.proto\"\211\001\n\tConnState\022\021\n\tether" +
      "_dst\030\001 \003(\r\022\021\n\tether_src\030\002 \003(\r\022\014\n\004s_ip\030\003 " +
      "\002(\007\022\014\n\004d_ip\030\004 \002(\007\022\016\n\006s_port\030\005 \002(\007\022\016\n\006d_p" +
      "ort\030\006 \002(\007\022\014\n\004cxid\030\007 \001(\006\022\014\n\004hash\030\010 \001(\007B\020B" +
      "\016ConnStateProto"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_ConnState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ConnState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ConnState_descriptor,
        new java.lang.String[] { "EtherDst", "EtherSrc", "SIp", "DIp", "SPort", "DPort", "Cxid", "Hash", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
